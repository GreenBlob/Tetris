#include <stdio.h>
#include <stdlib.h>
#include <time.h>//contem time(), que retorna o tempo atual em ms
#include <conio.h>//contem getch(), que retorna o input do usuario sem enter


char Campo[20][10];

void ConstruirCampo();//constroi o campo ao inicio do jogo
void PrintarCampo();//imprime o jogo na tela sempre que necessario
void ConstruirNovaPeca();//constroi nova peca quando a atual cair
void MesclarPecaCampo();//mescla a matriz da PecaAtual com a matriz Campo
int Mover(char);
int ChecarSeCabe(char);


void delay(unsigned int milliseconds){

    clock_t start = clock();

    while((clock() - start) * 1000 / CLOCKS_PER_SEC < milliseconds);
}


typedef struct
{
char Nome;
char PecaArray[4][4];
int PosicaoX;
int PosicaoY;
}Peca;
Peca PecaAtual;
int main()
{
ConstruirCampo();
int GameOver = 0;
while(!GameOver)//loop principal
    {

//    EliminarLinhasCompletas();
    ConstruirNovaPeca();
    int PecaCaiu = 0;
    while(!PecaCaiu)//loop que verifica se a peca atual caiu
        {
        clock_t Turno = 99999;//tempo em ms que demora para uma peca cair um quadrado
        clock_t CurrentTime = clock()/CLOCKS_PER_SEC;//armazena o horario atual para determinar a passagem de um turno(tempo en que o jogador pode mover a peca antes dela cair uma casa automaticamente)

        MesclarPecaCampo();
        PrintarCampo();

        while (CurrentTime < (double)(CurrentTime+Turno))//loop que engloba a passagem de um turno (tempo en que o jogador pode mover a peca antes dela cair uma casa automaticamente)
            {
            if(!PecaCaiu){break;}//caso o jogador tenha descido a peca ate ela cair, esse if sai do while imediatamente
            char tecla;
            if(kbhit()!=0)//verifica se existe alguma tecla pressionada no momento
                {
                tecla = getch();//armazena a tecla pressionada na variavel tecla
                PecaCaiu = Mover(tecla);//assiona a funcao Mover, que retorna ALTO apenas se a peca chegou ao fim da tela
                PrintarCampo();
                }
            }
        PecaCaiu = Mover('s');//funcao que move a peca para baixo ao fim do turno
        }
    }
}

void ConstruirCampo()
    {
    for (int i =0; i<20; i++)
        {
        for (int j =0; j<10; j++)
            {
            Campo[i][j] = '.';
            }
        }
    }

void PrintarCampo()
    {
    system("cls");
    for (int i =0; i<20; i++)
        {
        for (int j =0; j<10; j++)
            {
            printf("%c", Campo[i][j]);
            }
        printf("\n");
        }
    }

void MesclarPecaCampo()
    {
    for (int i =0; i<20; i++)//limpa a peca antiga
        {
        for (int j =0; j<10; j++)
            {
            if(Campo[i][j]=='X');
                {
                Campo[i][j]='.';
                }
            }
        }
    for (int i=0; i<4; i++)//posiciona a nova peca
        {
        for (int j=0; j<4; j++)
            {
             if(PecaAtual.PecaArray[i][j]=='X')
                {
                 Campo[i+PecaAtual.PosicaoY][j+PecaAtual.PosicaoX]='X';
                }
            }
        }
    }

int Mover(char direcao)
    {
    char PecaTemporaria[4][4];
    if(direcao=='w')
        {
        if(ChecarSeCabe('w'))
            {
                PecaTemporaria[0][0]=PecaAtual.PecaArray[3][0];
                PecaTemporaria[0][1]=PecaAtual.PecaArray[2][0];
                PecaTemporaria[0][2]=PecaAtual.PecaArray[1][0];
                PecaTemporaria[0][3]=PecaAtual.PecaArray[0][0];
                PecaTemporaria[1][0]=PecaAtual.PecaArray[3][1];
                PecaTemporaria[1][1]=PecaAtual.PecaArray[2][1];
                PecaTemporaria[1][2]=PecaAtual.PecaArray[1][1];
                PecaTemporaria[1][3]=PecaAtual.PecaArray[0][1];
                PecaTemporaria[2][0]=PecaAtual.PecaArray[3][2];
                PecaTemporaria[2][1]=PecaAtual.PecaArray[2][2];
                PecaTemporaria[2][2]=PecaAtual.PecaArray[1][2];
                PecaTemporaria[2][3]=PecaAtual.PecaArray[0][2];
                PecaTemporaria[3][0]=PecaAtual.PecaArray[3][3];
                PecaTemporaria[3][1]=PecaAtual.PecaArray[2][3];
                PecaTemporaria[3][2]=PecaAtual.PecaArray[1][3];
                PecaTemporaria[3][3]=PecaAtual.PecaArray[0][3];

                for(int i=0; i<4; i++)
                {
                    for(int j=0; j<4; j++)
                        {
                        PecaAtual.PecaArray[i][j] = PecaTemporaria[i][j];
                        }
                }
            }
        return 0;
        }

    if(direcao=='s')//descer peca
        {
        if(ChecarSeCabe('s'))
            {
            PecaAtual.PosicaoY = PecaAtual.PosicaoY + 1;
            }
        else{return 1;}
        return 0;
        }

    if(direcao=='a')//mover peca para esquerda
        {
        if(ChecarSeCabe('a'))
            {
            PecaAtual.PosicaoX = PecaAtual.PosicaoX - 1;
            }
        return 0;
        }

    if(direcao=='d')//mover peca para direita
        {
        if(ChecarSeCabe('d'))
            {
             PecaAtual.PosicaoX = PecaAtual.PosicaoX + 1;
            }
        return 0;
        }
    return 0;
    }

int ChecarSeCabe(char direcao)
    {
    Peca PecaTemporaria = PecaAtual;
    if (direcao=='w')//girar horario
        {
        PecaTemporaria.PecaArray[0][0]=PecaAtual.PecaArray[3][0];
        PecaTemporaria.PecaArray[0][1]=PecaAtual.PecaArray[2][0];
        PecaTemporaria.PecaArray[0][2]=PecaAtual.PecaArray[1][0];
        PecaTemporaria.PecaArray[0][3]=PecaAtual.PecaArray[0][0];
        PecaTemporaria.PecaArray[1][0]=PecaAtual.PecaArray[3][1];
        PecaTemporaria.PecaArray[1][1]=PecaAtual.PecaArray[2][1];
        PecaTemporaria.PecaArray[1][2]=PecaAtual.PecaArray[1][1];
        PecaTemporaria.PecaArray[1][3]=PecaAtual.PecaArray[0][1];
        PecaTemporaria.PecaArray[2][0]=PecaAtual.PecaArray[3][2];
        PecaTemporaria.PecaArray[2][1]=PecaAtual.PecaArray[2][2];
        PecaTemporaria.PecaArray[2][2]=PecaAtual.PecaArray[1][2];
        PecaTemporaria.PecaArray[2][3]=PecaAtual.PecaArray[0][2];
        PecaTemporaria.PecaArray[3][0]=PecaAtual.PecaArray[3][3];
        PecaTemporaria.PecaArray[3][1]=PecaAtual.PecaArray[2][3];
        PecaTemporaria.PecaArray[3][2]=PecaAtual.PecaArray[1][3];
        PecaTemporaria.PecaArray[3][3]=PecaAtual.PecaArray[0][3];

        for(int i=0; i<4; i++)
            {
            for(int j=0; j<4; j++)
                {
                if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && ((i+PecaTemporaria.PosicaoY)>=20 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
                if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && ((j+PecaTemporaria.PosicaoX)>=10 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                }
            }
    return 1;
        }
    if (direcao=='s')//descer uma casa
        {
        PecaTemporaria.PosicaoY = PecaAtual.PosicaoY + 1;
        for(int i=0; i<4; i++)
            {
            for(int j=0; j<4; j++)
                {
                if ((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if ((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && ((i+PecaTemporaria.PosicaoY)>=20 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
                }
            }
        return 1;
        }

    if (direcao=='a')//mover esquerda
        {
        PecaTemporaria.PosicaoX = PecaAtual.PosicaoX - 1;
        for(int i=0; i<4; i++)
            {
                for(int j=0; j<4; j++)
                    {
                    if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                    if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && ((j+PecaTemporaria.PosicaoX)>=10 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                    }

            }
        return 1;
        }

    if (direcao=='d')//mover direita
        {
        PecaTemporaria.PosicaoX = PecaAtual.PosicaoX + 1;
        for(int i=0; i<4; i++)
            {
                for(int j=0; j<4; j++)
                    {
                    if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                    if((PecaTemporaria.PecaArray[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='X') && ((j+PecaTemporaria.PosicaoX)>=10 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                    }

            }
        return 1;
        }
    }
void ConstruirNovaPeca()
    {
	srand(time(0));//modifica a seed usada pela funcao rand para criar nova peca. usa o horario atual como seed
	int r = (rand()%7)+1;
	switch(r)
		{
			case 1:
                	PecaAtual.Nome = 'L';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='.';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    ..X.
    XXX.
    ....
*/
                break;
			case 2:
                	PecaAtual.Nome = 'J';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='.';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    X...
    XXX.
    ....
*/
                break;
			case 3:
                	PecaAtual.Nome = 'S';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='.';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .XX.
    XX..
    ....
*/
                break;
			case 4:
                	PecaAtual.Nome = 'Z';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';


/*
    ....
    XX..
    .XX.
    ....
*/
                break;
			case 5:
                	PecaAtual.Nome = 'O';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .XX.
    .XX.
    ....
*/

                break;
			case 6:
                	PecaAtual.Nome = 'I';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='X';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='.';
                    PecaAtual.PecaArray[2][2]='.';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    XXXX
    ....
    ....
*/
                break;
			case 7:
                	PecaAtual.Nome = 'T';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .X..
    XXX.
    ....
*/
                break;
            default:
                break;
		}
    }
