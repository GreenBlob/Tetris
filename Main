//Alunos: Blenda Oliveira Mazetto, Maria Isadora Crivelli, Victor Hugo Cercasin.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>//contem time(), que retorna o tempo atual em ms
#include <conio.h>//contem getch(), que retorna o input do usuario sem enter

typedef struct//cria novo tipo para pecas
{
char Nome;
char PecaArray[8][8];
int PosicaoX;
int PosicaoY;
}Peca;

void Introducao();//printa a introducao e ensina os comando ao jogador
void ConstruirCampo(char Campo[40][20]);//constroi o campo ao inicio do jogo
void PrintarCampo(int,char Campo[40][20]);//modifica os caracteres usados pela engine para os caracteres mostrsdor ao usuario e printa o campo
void ConstruirNovaPeca(int,char Campo[40][20], Peca *PecaAtual);//constroi nova peca quando a atual cair
void MesclarPecaCampo(char Campo[40][20], Peca *PecaAtual);//mescla a matriz da (*PecaAtual) com a matriz Campo
void SalvarCampo(char Campo[40][20]);//congela as pecas no ponto onde elas cairam
int EliminarLinhasCompletas(int, char Campo[40][20]);//elimina linhas completas e remaneja o campo
int EliminarLinha(int, int,char Campo[40][20]);//chamada pela funcao EliminarLinhasCompletas
void RemanejarCampo(int,char Campo[40][20]);//chamada pela funcao EliminarLinhasCompletas
int Mover(char,char Campo[40][20], Peca *PecaAtual);//move a peca de acordo com o input do jogador. Retorna BAIXO caso a pecca tenha chegado ao fim do campo
int ChecarSeCabe(char,char Campo[40][20], Peca *PecaAtual);//chamada pela funcao Mover. Faz uma simulacao para inferir se a peca cabe na nova posicao escolhida pelo usuario
//e retorna BAIXO caso a peca nao caiba
void GameOver(int);//printa mensagem de fim de jogo, sua pontuacao e reinicia o programa caso o jogador queira jogar novamente


void delay(unsigned int milliseconds){//funcao que permite criar delays para debugging

    clock_t start = clock();

    while((clock() - start) * 1500 / CLOCKS_PER_SEC < milliseconds);
}




int main()
{
char Campo[40][20];
int pontos=0;
Peca PecaAtual;
Introducao();
ConstruirCampo(Campo);
int GameOver = 0;
while(!GameOver)//loop principal
    {

    pontos=EliminarLinhasCompletas(pontos, Campo);
    ConstruirNovaPeca(pontos,Campo, &PecaAtual);
    int PecaCaiu = 0;
    while(!PecaCaiu)//loop que verifica se a peca atual caiu
        {
        MesclarPecaCampo(Campo, &PecaAtual);
        PrintarCampo(pontos, Campo);
        int inicio = time(0);
        int agora = 0;
        float turno = 1.0;
        while (agora<inicio+turno)//loop que engloba a passagem de um turno (tempo en que o jogador pode mover a peca antes dela cair uma casa automaticamente)
            {
            if(PecaCaiu){break;}//caso o jogador tenha descido a peca ate ela cair, sai do while imediatamente
            if(kbhit()!=0)//verifica se existe alguma tecla pressionada no momento
                {
                PecaCaiu = Mover(getch(), Campo, &PecaAtual);//aciona a funcao Mover, que retorna ALTO apenas se a peca chegou ao fim da tela
                MesclarPecaCampo(Campo, &PecaAtual);
                PrintarCampo(pontos, Campo);
                }
            agora = time(0);
            }
        PecaCaiu = Mover('s',Campo, &PecaAtual);//funcao que move a peca para baixo ao fim do turno
        }
    }

}


void Introducao()
    {
    printf("                                                                         _       _        _     \n");
    printf("                                                                        | |     | |      (_)    \n");
    printf("                                                                        | |_ ___| |_ _ __ _ ___ \n");
    printf("                                                                        | __/ _ \\ __| '__| / __|\n");
    printf("                                                                        | | | __/ |_| |  | \\__ \\ \n");
    printf("                                                                        \\___\\___|\\__|_|  |_|___/\n\n");
    
    printf("                                                                               _____\n");
    printf("                                                                              |  W  |\n");
    printf("                                                                         _____|_____|_____\n");
    printf("                                                                        |  A  |  S  |  D  |\n");
    printf("                                                                        |_____|_____|_____|\n\n");
    
    printf("                                                                        'A' e 'D' movem a peca.\n");                        
    printf("                                                                        'W' gira a peca.\n");
    printf("                                                                        'S' desce a peca uma casa.\n\n");         
    
    printf("                                                                         _________________________\n");
    printf("                                                                        |                         |\n");
    printf("                                                                        |_________________________|\n\n");
    
    printf("                                                                        'barra de espaco' desce a peca ate o final.\n\n");
    
    printf("                                                                        Aperte enter para comecar.\n");

	printf("                                                    ____\n");
	printf("                                                   |    |\n");
	printf("                                                   |    |                                                              _____\n");
	printf("                                                   |    |                                                             |     |\n");
	printf("                                                   |    |                                 _____                   ____|     |\n");
	printf("                                                   |    |                                |     |                 |          |\n");
	printf("                                                   |    |____                            |     |      ___________|____      |\n");
	printf("                                                   |    |    |                           |     |     |                |     |\n");
	printf("                                                   |____|    |_________       _____      |     |     |___________     |_____|\n");
	printf("                                                   |         |         |     |     |     |     |     |           |    |     |\n");
	printf("                                                   |     ____|         |_____|     |_____|     |_____|           |____|     |\n");
	printf("                                                   |    |    |         |           |           |     |           |          |\n");
	printf("                                                   |____|    |_________|_____      |_____ _____|     |_____ _____|_____     |\n");
	printf("                                                   |              |          |     |     |                 |          |     |\n");
	printf("                                                   |______________|_____     |_____|     |_________________|_____     |_____|\n");
	printf("                                                   |    |    |          |          |     |     |     |           |          |\n");
	printf("                                                   |    |    |____      |_____ ____|     |     |     |______     |____ _____|\n");
	printf("                                                   |    |         |           |    |     |     |           |          |     |\n");
	printf("                                                   |    |_____    |___________|    |     |     |______     |__________|     |\n");
	printf("                                                   |         |    |                |     |           |     |                |\n");
	printf("                                                   |_________|____|________________|_____|___________|_____|________________|\n");
	

    char a;
    scanf("%c",&a);

    }
void ConstruirCampo(char Campo[40][20])
    {
    for (int i =0; i<40; i++)
        {
        for (int j =0; j<20; j++)
            {
            Campo[i][j] = '.';

            }
        }
    }

void PrintarCampo(int pontos, char Campo[40][20])
    {
    system("cls");
    char bloco = 219;
    for (int i =0; i<42; i++)
        {
        printf("                                                                ");
        for (int j =0; j<22; j++)
            {
            if(i==0 && j==0){printf("%c", 218);}//canto esquerdo superior
            else if(i==0 && j==21)//canto direito superior
                {
                printf("%c", 191);
                printf("     %d pontos", pontos);
                }
            else if(i==41 && j==0)//canto esquerdo inferior
                {
                printf("%c", 192);
                }
            else if(i==41 && j==21)//canto direito inferior
                {
                printf("%c", 217);
                }

            else if(i==0 || i==41)//bordas horizontais
                {
                printf("%c", 196);
                printf("%c", 196);
                }
            else if(j==0 || j==21)//bordas verticais
                {
                printf("%c", 179);
                }



            else
                {
                    if(Campo[i-1][j-1]=='.')//espacos vazios
                        {
                        printf(" ");
                        printf(" ");
                        }
                    else//pecas
                        {
                        printf("%c", bloco);
                        printf("%c", bloco);
                        }
                }

            }
        printf("\n");

        }
    }

void MesclarPecaCampo(char Campo[40][20], Peca *PecaAtual)
    {
    for(int i=0; i<40; i++)
        {
        for(int j=0; j<20; j++)
            {
            if(Campo[i][j]=='X')
                {
                Campo[i][j] = '.';
                }
            }
        }

    for (int i=0; i<8; i++)//posiciona a nova peca
        {
        for (int j=0; j<8; j++)
            {
            if((*PecaAtual).PecaArray[i][j]=='X')
                {
                 Campo[i+(*PecaAtual).PosicaoY][j+(*PecaAtual).PosicaoX]='X';
                }
            }
        }
    }
void SalvarCampo(char Campo[40][20])
    {
        for(int i=0; i<40; i++)
        {
        for(int j=0; j<20; j++)
            {
            if(Campo[i][j]=='X')
                {
                Campo[i][j] = 'Y';
                }
  //          else{}
            }
        }
    }
int Mover(char direcao, char Campo[40][20], Peca *PecaAtual)
{
    char PecaTemporaria[8][8];
    if(direcao=='w')
    {
        if(ChecarSeCabe('w', Campo, PecaAtual))
        {
            for (int i=0; i<=7;i++)
            {
                for (int j=0;j<=7; j++)
                {
                    PecaTemporaria[i][j]=(*PecaAtual).PecaArray[7-j][i];
                }
            }
        }

        for(int i=0; i<8; i++)
        {
            for(int j=0; j<8; j++)
            {
                (*PecaAtual).PecaArray[i][j] = PecaTemporaria[i][j];
            }
        }

        return 0;
    }

    if(direcao=='s')//descer peca
        {
        if(ChecarSeCabe('s',Campo, PecaAtual))
            {
            (*PecaAtual).PosicaoY = (*PecaAtual).PosicaoY + 2;
            return 0;
            }
        else
            {
            SalvarCampo(Campo);
            return 1;
            }
        }

    if(direcao=='a')//mover peca para esquerda
        {
        if(ChecarSeCabe('a', Campo, PecaAtual))
            {
            (*PecaAtual).PosicaoX = (*PecaAtual).PosicaoX - 2;
            }
        return 0;
        }

    if(direcao=='d')//mover peca para direita
        {
        if(ChecarSeCabe('d', Campo, PecaAtual))
            {
             (*PecaAtual).PosicaoX = (*PecaAtual).PosicaoX + 2;
            }
        return 0;
        }
    if(direcao==' ')//desces a peca instantaniamente
        {
        int PecaCaiu=0;
        while(!PecaCaiu)
            {
            PecaCaiu = Mover('s', Campo, PecaAtual);
            MesclarPecaCampo(Campo, PecaAtual);
            }
        }

    return 0;
    }
int EliminarLinhasCompletas(int pontos, char Campo[40][20])
    {
    int contador= 0;
    for (int i =0; i<40; i++)
        {
        int contador= 0;
        for (int j =0; j<20; j++)
            {
            if(Campo[i][j]!='.'){contador = contador+1;}
            }
        if(contador==20)//entra nesse if caso a linha esteja completa
            {
            pontos=EliminarLinha(i,pontos,Campo);//elimina a linha que esta completa
            RemanejarCampo(i, Campo);//remaneja as peca que estao acima da linha eliminada
            }
        }
        return pontos;
    }
int EliminarLinha(int linha, int pontos, char Campo[40][20])
    {
    for(int j=0; j<20; j++){Campo[linha][j]='.';}
    pontos = pontos +100;
    return pontos;
    }
void RemanejarCampo(int linha, char Campo[40][20])
    {
    for (int i =linha-1; i>=0; i--)
        {
        for (int j =0; j<20; j++)
            {
            if(Campo[i][j]!= '.')
                {
                Campo[i+1][j]=Campo[i][j];
                Campo[i][j]='.';
                }
            }
        }
    }
void GameOver(int pontos)
    {
    system ("cls");
    printf("\n\n\n\n");
    printf("                                             _____                                       _____\n");
    printf("                                            /  ___|                                     /     \\ \n");
    printf("                                            | /        ______    _     _    _____      |  __  | __     _   _____    _____\n");
    printf("                                            | |  __   / _____\\  / \\   / \\  / ___ \\     | |  | | | |   | | / ___ \\  | ___ \\ \n");
    printf("                                            | | |_ \\  | |___| | |   \\/ / | |  ___/     | |__| | | |   | | |  ___/  |  __ /\n");
    printf("                                            \\ \\__| |  | |   | | | |\\__/| | | |____     |      |  \\ \\_/ /  | |____  | |  \\ \\ \n");
    printf("                                             \\_____/  |_|   |_| |_|    |_|  \\____/      \\____/    \\___/    \\____/  |_|   \\_|\n\n\n");
    printf("                                                                    Voce fez %d pontos\n", pontos);
    printf("                                                                    Aperte enter para jogar novamente.\n");
    char a;
    scanf("%c",&a);
    system ("cls");
    main();
    }

int ChecarSeCabe(char direcao,char Campo[40][20], Peca *PecaAtual)
{

    Peca PecaTemporaria = (*PecaAtual);
    if (direcao=='w')//girar horario
    {
        for(int i=0; i<8; i++)
        {
            for(int j=0; j<8; j++)
            {
                PecaTemporaria.PecaArray[i][j]=(*PecaAtual).PecaArray[7-j][i];
            }
        }
                

        for(int i=0; i<8; i++)
        {
            for(int j=0; j<8; j++)
            {
                if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if((PecaTemporaria.PecaArray[i][j]=='X') && ((i+PecaTemporaria.PosicaoY)>=40 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
                if((PecaTemporaria.PecaArray[i][j]=='X') && ((j+PecaTemporaria.PosicaoX)>=20 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
            }
        }
        return 1;
    }
    if (direcao=='s')//descer uma casa
    {
        PecaTemporaria.PosicaoY = PecaTemporaria.PosicaoY + 2;
        for(int i=0; i<8; i++)
        {
            for(int j=0; j<8; j++)
            {
                if ((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if ((PecaTemporaria.PecaArray[i][j]=='X') && ((i+PecaTemporaria.PosicaoY)>=40 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
            }
        }
        return 1;
    }

    if (direcao=='a')//mover esquerda
    {
        PecaTemporaria.PosicaoX = PecaTemporaria.PosicaoX - 2;
        for(int i=0; i<8; i++)
        {
            for(int j=0; j<8; j++)
            {
                if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if((PecaTemporaria.PecaArray[i][j]=='X') &&  (j+PecaTemporaria.PosicaoX) < 0){return 0;}//verifica se a peca ultrapaca os limites em X
            }

        }
        return 1;
    }

    if (direcao=='d')//mover direita
        {
        PecaTemporaria.PosicaoX = PecaTemporaria.PosicaoX + 2;
        for(int i=0; i<8; i++)
            {
                for(int j=0; j<8; j++)
                    {
                    if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                    if((PecaTemporaria.PecaArray[i][j]=='X') && ((j+PecaTemporaria.PosicaoX)>=20 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                    }

            }
        return 1;
        }
    }
void ConstruirNovaPeca(int pontos, char Campo[40][20], Peca *PecaAtual)
    {
    for(int i=0; i<40; i++)
        {
        if(Campo[1][i]!='.'){GameOver(pontos);}
        }
    srand(time(0));//modifica a seed usada pela funcao rand para criar nova peca. usa o horario atual como seed
    int r = (rand()%7)+1;
    switch(r)
        {
            case 1:
                    (*PecaAtual).Nome = 'L';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='.';
                    (*PecaAtual).PecaArray[2][1]='.';
                    (*PecaAtual).PecaArray[2][2]='.';
                    (*PecaAtual).PecaArray[2][3]='.';
                    (*PecaAtual).PecaArray[2][4]='X';
                    (*PecaAtual).PecaArray[2][5]='X';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='.';
                    (*PecaAtual).PecaArray[3][1]='.';
                    (*PecaAtual).PecaArray[3][2]='.';
                    (*PecaAtual).PecaArray[3][3]='.';
                    (*PecaAtual).PecaArray[3][4]='X';
                    (*PecaAtual).PecaArray[3][5]='X';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='X';
                    (*PecaAtual).PecaArray[4][1]='X';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='X';
                    (*PecaAtual).PecaArray[4][5]='X';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='X';
                    (*PecaAtual).PecaArray[5][1]='X';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='X';
                    (*PecaAtual).PecaArray[5][5]='X';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';



/*
/*
/*
    ....
    ..X.
    XXX.
    ....
*/
                break;
            case 2:
                    (*PecaAtual).Nome = 'J';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='X';
                    (*PecaAtual).PecaArray[2][1]='X';
                    (*PecaAtual).PecaArray[2][2]='.';
                    (*PecaAtual).PecaArray[2][3]='.';
                    (*PecaAtual).PecaArray[2][4]='.';
                    (*PecaAtual).PecaArray[2][5]='.';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='X';
                    (*PecaAtual).PecaArray[3][1]='X';
                    (*PecaAtual).PecaArray[3][2]='.';
                    (*PecaAtual).PecaArray[3][3]='.';
                    (*PecaAtual).PecaArray[3][4]='.';
                    (*PecaAtual).PecaArray[3][5]='.';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='X';
                    (*PecaAtual).PecaArray[4][1]='X';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='X';
                    (*PecaAtual).PecaArray[4][5]='X';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='X';
                    (*PecaAtual).PecaArray[5][1]='X';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='X';
                    (*PecaAtual).PecaArray[5][5]='X';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';
/*
    ....
    X...
    XXX.
    ....
*/
                break;
            case 3:
                    (*PecaAtual).Nome = 'S';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='.';
                    (*PecaAtual).PecaArray[2][1]='.';
                    (*PecaAtual).PecaArray[2][2]='X';
                    (*PecaAtual).PecaArray[2][3]='X';
                    (*PecaAtual).PecaArray[2][4]='X';
                    (*PecaAtual).PecaArray[2][5]='X';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='.';
                    (*PecaAtual).PecaArray[3][1]='.';
                    (*PecaAtual).PecaArray[3][2]='X';
                    (*PecaAtual).PecaArray[3][3]='X';
                    (*PecaAtual).PecaArray[3][4]='X';
                    (*PecaAtual).PecaArray[3][5]='X';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='X';
                    (*PecaAtual).PecaArray[4][1]='X';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='.';
                    (*PecaAtual).PecaArray[4][5]='.';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='X';
                    (*PecaAtual).PecaArray[5][1]='X';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='.';
                    (*PecaAtual).PecaArray[5][5]='.';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';
/*
    ....
    .XX.
    XX..
    ....
*/
                break;
            case 4:
                    (*PecaAtual).Nome = 'Z';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='X';
                    (*PecaAtual).PecaArray[2][1]='X';
                    (*PecaAtual).PecaArray[2][2]='X';
                    (*PecaAtual).PecaArray[2][3]='X';
                    (*PecaAtual).PecaArray[2][4]='.';
                    (*PecaAtual).PecaArray[2][5]='.';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='X';
                    (*PecaAtual).PecaArray[3][1]='X';
                    (*PecaAtual).PecaArray[3][2]='X';
                    (*PecaAtual).PecaArray[3][3]='X';
                    (*PecaAtual).PecaArray[3][4]='.';
                    (*PecaAtual).PecaArray[3][5]='.';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='.';
                    (*PecaAtual).PecaArray[4][1]='.';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='X';
                    (*PecaAtual).PecaArray[4][5]='X';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='.';
                    (*PecaAtual).PecaArray[5][1]='.';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='X';
                    (*PecaAtual).PecaArray[5][5]='X';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';


/*
    ....
    XX..
    .XX.
    ....
*/
                break;
            case 5:
                    (*PecaAtual).Nome = 'O';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='.';
                    (*PecaAtual).PecaArray[2][1]='.';
                    (*PecaAtual).PecaArray[2][2]='X';
                    (*PecaAtual).PecaArray[2][3]='X';
                    (*PecaAtual).PecaArray[2][4]='X';
                    (*PecaAtual).PecaArray[2][5]='X';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='.';
                    (*PecaAtual).PecaArray[3][1]='.';
                    (*PecaAtual).PecaArray[3][2]='X';
                    (*PecaAtual).PecaArray[3][3]='X';
                    (*PecaAtual).PecaArray[3][4]='X';
                    (*PecaAtual).PecaArray[3][5]='X';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='.';
                    (*PecaAtual).PecaArray[4][1]='.';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='X';
                    (*PecaAtual).PecaArray[4][5]='X';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='.';
                    (*PecaAtual).PecaArray[5][1]='.';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='X';
                    (*PecaAtual).PecaArray[5][5]='X';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';
  //  ....
    //.XX.
    //.XX.
    //....


                break;
            case 6:
                    (*PecaAtual).Nome = 'I';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='X';
                    (*PecaAtual).PecaArray[2][1]='X';
                    (*PecaAtual).PecaArray[2][2]='X';
                    (*PecaAtual).PecaArray[2][3]='X';
                    (*PecaAtual).PecaArray[2][4]='X';
                    (*PecaAtual).PecaArray[2][5]='X';
                    (*PecaAtual).PecaArray[2][6]='X';
                    (*PecaAtual).PecaArray[2][7]='X';
                    (*PecaAtual).PecaArray[3][0]='X';
                    (*PecaAtual).PecaArray[3][1]='X';
                    (*PecaAtual).PecaArray[3][2]='X';
                    (*PecaAtual).PecaArray[3][3]='X';
                    (*PecaAtual).PecaArray[3][4]='X';
                    (*PecaAtual).PecaArray[3][5]='X';
                    (*PecaAtual).PecaArray[3][6]='X';
                    (*PecaAtual).PecaArray[3][7]='X';
                    (*PecaAtual).PecaArray[4][0]='.';
                    (*PecaAtual).PecaArray[4][1]='.';
                    (*PecaAtual).PecaArray[4][2]='.';
                    (*PecaAtual).PecaArray[4][3]='.';
                    (*PecaAtual).PecaArray[4][4]='.';
                    (*PecaAtual).PecaArray[4][5]='.';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='.';
                    (*PecaAtual).PecaArray[5][1]='.';
                    (*PecaAtual).PecaArray[5][2]='.';
                    (*PecaAtual).PecaArray[5][3]='.';
                    (*PecaAtual).PecaArray[5][4]='.';
                    (*PecaAtual).PecaArray[5][5]='.';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';
/*
    ....
    XXXX
    ....
    ....
*/
                break;
            case 7:
                    (*PecaAtual).Nome = 'T';
                    (*PecaAtual).PosicaoX = 8;
                    (*PecaAtual).PosicaoY = 0;
                    (*PecaAtual).PecaArray[0][0]='.';
                    (*PecaAtual).PecaArray[0][1]='.';
                    (*PecaAtual).PecaArray[0][2]='.';
                    (*PecaAtual).PecaArray[0][3]='.';
                    (*PecaAtual).PecaArray[0][4]='.';
                    (*PecaAtual).PecaArray[0][5]='.';
                    (*PecaAtual).PecaArray[0][6]='.';
                    (*PecaAtual).PecaArray[0][7]='.';
                    (*PecaAtual).PecaArray[1][0]='.';
                    (*PecaAtual).PecaArray[1][1]='.';
                    (*PecaAtual).PecaArray[1][2]='.';
                    (*PecaAtual).PecaArray[1][3]='.';
                    (*PecaAtual).PecaArray[1][4]='.';
                    (*PecaAtual).PecaArray[1][5]='.';
                    (*PecaAtual).PecaArray[1][6]='.';
                    (*PecaAtual).PecaArray[1][7]='.';
                    (*PecaAtual).PecaArray[2][0]='.';
                    (*PecaAtual).PecaArray[2][1]='.';
                    (*PecaAtual).PecaArray[2][2]='X';
                    (*PecaAtual).PecaArray[2][3]='X';
                    (*PecaAtual).PecaArray[2][4]='.';
                    (*PecaAtual).PecaArray[2][5]='.';
                    (*PecaAtual).PecaArray[2][6]='.';
                    (*PecaAtual).PecaArray[2][7]='.';
                    (*PecaAtual).PecaArray[3][0]='.';
                    (*PecaAtual).PecaArray[3][1]='.';
                    (*PecaAtual).PecaArray[3][2]='X';
                    (*PecaAtual).PecaArray[3][3]='X';
                    (*PecaAtual).PecaArray[3][4]='.';
                    (*PecaAtual).PecaArray[3][5]='.';
                    (*PecaAtual).PecaArray[3][6]='.';
                    (*PecaAtual).PecaArray[3][7]='.';
                    (*PecaAtual).PecaArray[4][0]='X';
                    (*PecaAtual).PecaArray[4][1]='X';
                    (*PecaAtual).PecaArray[4][2]='X';
                    (*PecaAtual).PecaArray[4][3]='X';
                    (*PecaAtual).PecaArray[4][4]='X';
                    (*PecaAtual).PecaArray[4][5]='X';
                    (*PecaAtual).PecaArray[4][6]='.';
                    (*PecaAtual).PecaArray[4][7]='.';
                    (*PecaAtual).PecaArray[5][0]='X';
                    (*PecaAtual).PecaArray[5][1]='X';
                    (*PecaAtual).PecaArray[5][2]='X';
                    (*PecaAtual).PecaArray[5][3]='X';
                    (*PecaAtual).PecaArray[5][4]='X';
                    (*PecaAtual).PecaArray[5][5]='X';
                    (*PecaAtual).PecaArray[5][6]='.';
                    (*PecaAtual).PecaArray[5][7]='.';
                    (*PecaAtual).PecaArray[6][0]='.';
                    (*PecaAtual).PecaArray[6][1]='.';
                    (*PecaAtual).PecaArray[6][2]='.';
                    (*PecaAtual).PecaArray[6][3]='.';
                    (*PecaAtual).PecaArray[6][4]='.';
                    (*PecaAtual).PecaArray[6][5]='.';
                    (*PecaAtual).PecaArray[6][6]='.';
                    (*PecaAtual).PecaArray[6][7]='.';
                    (*PecaAtual).PecaArray[7][0]='.';
                    (*PecaAtual).PecaArray[7][1]='.';
                    (*PecaAtual).PecaArray[7][2]='.';
                    (*PecaAtual).PecaArray[7][3]='.';
                    (*PecaAtual).PecaArray[7][4]='.';
                    (*PecaAtual).PecaArray[7][5]='.';
                    (*PecaAtual).PecaArray[7][6]='.';
                    (*PecaAtual).PecaArray[7][7]='.';
//  .X..
 //   XXX.
  //  ....

                break;
            default:
                break;
        }
    }
