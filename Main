#include <stdio.h>
#include <stdlib.h>
#include <time.h>//contem time(), que retorna o tempo atual em ms
#include <conio.h>//contem getch(), que retorna o input do usuario sem enter


char Campo[20][10];
int pontos=0;

void Introducao();
void ConstruirCampo();//constroi o campo ao inicio do jogo
void PrintarCampo();//imprime o jogo na tela sempre que necessario
void ConstruirNovaPeca();//constroi nova peca quando a atual cair
void MesclarPecaCampo();//mescla a matriz da PecaAtual com a matriz Campo
void SalvarCampo();
void EliminarLinhasCompletas();
void EliminarLinha(int);
void RemanejarCampo(int);
int Mover(char);
int ChecarSeCabe(char);


void delay(unsigned int milliseconds){

    clock_t start = clock();

    while((clock() - start) * 1000 / CLOCKS_PER_SEC < milliseconds);
}


typedef struct
{
char Nome;
char PecaArray[4][4];
int PosicaoX;
int PosicaoY;
}Peca;
Peca PecaAtual;
int main()
{
Introducao();
ConstruirCampo();
int GameOver = 0;
while(!GameOver)//loop principal
    {

    EliminarLinhasCompletas();
    ConstruirNovaPeca();
    int PecaCaiu = 0;
    while(!PecaCaiu)//loop que verifica se a peca atual caiu
        {
        MesclarPecaCampo();
        PrintarCampo();
        int inicio = time(0);
        int agora = 0;
        float turno = 0.5;
        while (agora<inicio+turno)//loop que engloba a passagem de um turno (tempo en que o jogador pode mover a peca antes dela cair uma casa automaticamente)
            {
            if(PecaCaiu){break;}//caso o jogador tenha descido a peca ate ela cair, esse if sai do while imediatamente
            if(kbhit()!=0)//verifica se existe alguma tecla pressionada no momento
                {
                PecaCaiu = Mover(getch());//aciona a funcao Mover, que retorna ALTO apenas se a peca chegou ao fim da tela
                MesclarPecaCampo();
                PrintarCampo();
                }
            agora = time(0);
            }
        PecaCaiu = Mover('s');//funcao que move a peca para baixo ao fim do turno
        }
    }

}
void Introducao()
    {
    printf("                                                                                                       ");
printf(" _       _        _     \n");
printf("                                                                                                       ");
printf("| |     | |      (_)    \n");
printf("                                                                                                       ");
printf("| |_ ___| |_ _ __ _ ___ \n");
printf("                                                                                                       ");
printf("| __/ _ \\ __| '__| / __|\n");
printf("                                                                                                       ");
printf("| ||  __/ |_| |  | \\__ \ \n");
printf("                                                                                                       ");
printf(" \\__\\___|\\__|_|  |_|___/\n");
printf("                                                                                                       ");
printf("'a' e 'd' movem a peca.\n");
printf("                                                                                                       ");
printf("'w' gira a peca.\n");
printf("                                                                                                       ");
printf("'s' desce a peca uma casa.\n");
printf("                                                                                                       ");
printf("'barra de espaco' desce a peca ate o final.\n");
printf("                                                                                                       ");
printf("Aperte enter para comecar.");
char a;
scanf("%c",&a);

    }
void ConstruirCampo()
    {
    for (int i =0; i<20; i++)
        {
        for (int j =0; j<10; j++)
            {
            Campo[i][j] = '.';

            }
        }
    }

void PrintarCampo()
    {
    system("cls");
    char bloco = 219;
    for (int i =0; i<22; i++)
        {
        printf("                                                                                                       ");
        for (int j =0; j<12; j++)
            {
            if(i==0 && j==0){printf("%c", 218);}//canto esquerdo superior
            else if(i==0 && j==11)//canto direito superior
                {
                printf("%c", 191);
                printf("     %d pontos", pontos);
                }
            else if(i==21 && j==0)//canto esquerdo inferior
                {
                printf("%c", 192);
                }
            else if(i==21 && j==11)//canto direito inferior
                {
                printf("%c", 217);
                }

            else if(i==0 || i==21)//bordas horizontais
                {
                printf("%c", 196);
                printf("%c", 196);
                }
            else if(j==0 || j==11)//bordas verticais
                {
                printf("%c", 179);
                }



            else
                {
                    if(Campo[i-1][j-1]=='.')//espacos vazios
                        {
                        printf(" ");
                        printf(" ");
                        }
                    else//pecas
                        {
                        printf("%c", bloco);
                        printf("%c", bloco);
                        }
                }

            }
        printf("\n");

        }
    }

void MesclarPecaCampo()
    {
    for(int i=0; i<20; i++)
        {
        for(int j=0; j<10; j++)
            {
            if(Campo[i][j]=='X')
                {
                Campo[i][j] = '.';
                }
//            else{}
            }
        }

    for (int i=0; i<4; i++)//posiciona a nova peca
        {
        for (int j=0; j<4; j++)
            {
             if(PecaAtual.PecaArray[i][j]=='X')
                {
                 Campo[i+PecaAtual.PosicaoY][j+PecaAtual.PosicaoX]='X';
                }
            }
        }
    }
void SalvarCampo()
    {
        for(int i=0; i<20; i++)
        {
        for(int j=0; j<10; j++)
            {
            if(Campo[i][j]=='X')
                {
                Campo[i][j] = 'Y';
                }
  //          else{}
            }
        }
    }
int Mover(char direcao)
    {



    char PecaTemporaria[4][4];
    if(direcao=='w')
        {
        if(ChecarSeCabe('w'))
            {
                PecaTemporaria[0][0]=PecaAtual.PecaArray[3][0];
                PecaTemporaria[0][1]=PecaAtual.PecaArray[2][0];
                PecaTemporaria[0][2]=PecaAtual.PecaArray[1][0];
                PecaTemporaria[0][3]=PecaAtual.PecaArray[0][0];
                PecaTemporaria[1][0]=PecaAtual.PecaArray[3][1];
                PecaTemporaria[1][1]=PecaAtual.PecaArray[2][1];
                PecaTemporaria[1][2]=PecaAtual.PecaArray[1][1];
                PecaTemporaria[1][3]=PecaAtual.PecaArray[0][1];
                PecaTemporaria[2][0]=PecaAtual.PecaArray[3][2];
                PecaTemporaria[2][1]=PecaAtual.PecaArray[2][2];
                PecaTemporaria[2][2]=PecaAtual.PecaArray[1][2];
                PecaTemporaria[2][3]=PecaAtual.PecaArray[0][2];
                PecaTemporaria[3][0]=PecaAtual.PecaArray[3][3];
                PecaTemporaria[3][1]=PecaAtual.PecaArray[2][3];
                PecaTemporaria[3][2]=PecaAtual.PecaArray[1][3];
                PecaTemporaria[3][3]=PecaAtual.PecaArray[0][3];

                for(int i=0; i<4; i++)
                {
                    for(int j=0; j<4; j++)
                        {
                        PecaAtual.PecaArray[i][j] = PecaTemporaria[i][j];
                        }
                }
            }
        return 0;
        }

    if(direcao=='s')//descer peca
        {
        if(ChecarSeCabe('s'))
            {
            PecaAtual.PosicaoY = PecaAtual.PosicaoY + 1;
            return 0;
            }
        else
            {
            SalvarCampo();
            return 1;
            }
        }

    if(direcao=='a')//mover peca para esquerda
        {
        if(ChecarSeCabe('a'))
            {
            PecaAtual.PosicaoX = PecaAtual.PosicaoX - 1;
            }
        return 0;
        }

    if(direcao=='d')//mover peca para direita
        {
        if(ChecarSeCabe('d'))
            {
             PecaAtual.PosicaoX = PecaAtual.PosicaoX + 1;
            }
        return 0;
        }
    if(direcao==' ')//desces a peca instantaniamente
        {
        int PecaCaiu=0;
        while(!PecaCaiu)
            {
            PecaCaiu = Mover('s');
            MesclarPecaCampo();
            }
        }

    return 0;
    }
void EliminarLinhasCompletas()
    {
    int contador= 0;
    for (int i =0; i<20; i++)
        {
        int contador= 0;
        for (int j =0; j<10; j++)
            {
            if(Campo[i][j]!='.'){contador = contador+1;}
            }
        if(contador==10)//entra nesse if caso a linha esteja completa
            {
            EliminarLinha(i);//elimina a linha que esta completa
            RemanejarCampo(i);//remaneja as peca que estao acima da linha eliminada
            }
        }
    }
void EliminarLinha(int linha)
    {
    for(int j=0; j<10; j++){Campo[linha][j]='.';}
    pontos = pontos +100;
    }
void RemanejarCampo(int linha)
    {
    for (int i =linha-1; i>=0; i--)
        {
        for (int j =0; j<10; j++)
            {
            if(Campo[i][j]!= '.')
                {
                Campo[i+1][j]=Campo[i][j];
                Campo[i][j]='.';
                }
            }
        }
    }


int ChecarSeCabe(char direcao)
    {

    Peca PecaTemporaria = PecaAtual;
    if (direcao=='w')//girar horario
        {
        PecaTemporaria.PecaArray[0][0]=PecaAtual.PecaArray[3][0];
        PecaTemporaria.PecaArray[0][1]=PecaAtual.PecaArray[2][0];
        PecaTemporaria.PecaArray[0][2]=PecaAtual.PecaArray[1][0];
        PecaTemporaria.PecaArray[0][3]=PecaAtual.PecaArray[0][0];
        PecaTemporaria.PecaArray[1][0]=PecaAtual.PecaArray[3][1];
        PecaTemporaria.PecaArray[1][1]=PecaAtual.PecaArray[2][1];
        PecaTemporaria.PecaArray[1][2]=PecaAtual.PecaArray[1][1];
        PecaTemporaria.PecaArray[1][3]=PecaAtual.PecaArray[0][1];
        PecaTemporaria.PecaArray[2][0]=PecaAtual.PecaArray[3][2];
        PecaTemporaria.PecaArray[2][1]=PecaAtual.PecaArray[2][2];
        PecaTemporaria.PecaArray[2][2]=PecaAtual.PecaArray[1][2];
        PecaTemporaria.PecaArray[2][3]=PecaAtual.PecaArray[0][2];
        PecaTemporaria.PecaArray[3][0]=PecaAtual.PecaArray[3][3];
        PecaTemporaria.PecaArray[3][1]=PecaAtual.PecaArray[2][3];
        PecaTemporaria.PecaArray[3][2]=PecaAtual.PecaArray[1][3];
        PecaTemporaria.PecaArray[3][3]=PecaAtual.PecaArray[0][3];

        for(int i=0; i<4; i++)
            {
            for(int j=0; j<4; j++)
                {
                if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if((PecaTemporaria.PecaArray[i][j]=='X') && ((i+PecaTemporaria.PosicaoY)>=20 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
                if((PecaTemporaria.PecaArray[i][j]=='X') && ((j+PecaTemporaria.PosicaoX)>=10 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                }
            }
    return 1;
        }
    if (direcao=='s')//descer uma casa
        {
        PecaTemporaria.PosicaoY = PecaTemporaria.PosicaoY + 1;
        for(int i=0; i<4; i++)
            {
            for(int j=0; j<4; j++)
                {
                if ((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                if ((PecaTemporaria.PecaArray[i][j]=='X') && ((i+PecaTemporaria.PosicaoY)>=20 || (i+PecaTemporaria.PosicaoY)<0)){return 0;}//verifica se a peca ultrapaca os limites em Y
                }
            }
        return 1;
        }

    if (direcao=='a')//mover esquerda
        {
        PecaTemporaria.PosicaoX = PecaTemporaria.PosicaoX - 1;
        for(int i=0; i<4; i++)
            {
                for(int j=0; j<4; j++)
                    {
                    if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                    if((PecaTemporaria.PecaArray[i][j]=='X') &&  (j+PecaTemporaria.PosicaoX) < 0){return 0;}//verifica se a peca ultrapaca os limites em X
                    }

            }
        return 1;
        }

    if (direcao=='d')//mover direita
        {
        PecaTemporaria.PosicaoX = PecaTemporaria.PosicaoX + 1;
        for(int i=0; i<4; i++)
            {
                for(int j=0; j<4; j++)
                    {
                    if((PecaTemporaria.PecaArray[i][j]=='X') && (Campo[i+PecaTemporaria.PosicaoY][j+PecaTemporaria.PosicaoX]=='Y')){return 0;}//verifica se a peca ocuparia posicao ja ocupada por pecas antigas
                    if((PecaTemporaria.PecaArray[i][j]=='X') && ((j+PecaTemporaria.PosicaoX)>=10 || (j+PecaTemporaria.PosicaoX)<0)){return 0;}//verifica se a peca ultrapaca os limites em X
                    }

            }
        return 1;
        }
    }
void ConstruirNovaPeca()
    {
	srand(time(0));//modifica a seed usada pela funcao rand para criar nova peca. usa o horario atual como seed
	int r = (rand()%7)+1;
	switch(r)
		{
			case 1:
                	PecaAtual.Nome = 'L';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='.';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    ..X.
    XXX.
    ....
*/
                break;
			case 2:
                	PecaAtual.Nome = 'J';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='.';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    X...
    XXX.
    ....
*/
                break;
			case 3:
                	PecaAtual.Nome = 'S';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='.';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .XX.
    XX..
    ....
*/
                break;
			case 4:
                	PecaAtual.Nome = 'Z';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';


/*
    ....
    XX..
    .XX.
    ....
*/
                break;
			case 5:
                	PecaAtual.Nome = 'O';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .XX.
    .XX.
    ....
*/

                break;
			case 6:
                	PecaAtual.Nome = 'I';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='X';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='X';
                    PecaAtual.PecaArray[1][3]='X';
                    PecaAtual.PecaArray[2][0]='.';
                    PecaAtual.PecaArray[2][1]='.';
                    PecaAtual.PecaArray[2][2]='.';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    XXXX
    ....
    ....
*/
                break;
			case 7:
                	PecaAtual.Nome = 'T';
                    PecaAtual.PosicaoX = 4;
                    PecaAtual.PosicaoY = 0;
                    PecaAtual.PecaArray[0][0]='.';
                    PecaAtual.PecaArray[0][1]='.';
                    PecaAtual.PecaArray[0][2]='.';
                    PecaAtual.PecaArray[0][3]='.';
                    PecaAtual.PecaArray[1][0]='.';
                    PecaAtual.PecaArray[1][1]='X';
                    PecaAtual.PecaArray[1][2]='.';
                    PecaAtual.PecaArray[1][3]='.';
                    PecaAtual.PecaArray[2][0]='X';
                    PecaAtual.PecaArray[2][1]='X';
                    PecaAtual.PecaArray[2][2]='X';
                    PecaAtual.PecaArray[2][3]='.';
                    PecaAtual.PecaArray[3][0]='.';
                    PecaAtual.PecaArray[3][1]='.';
                    PecaAtual.PecaArray[3][2]='.';
                    PecaAtual.PecaArray[3][3]='.';
/*
    ....
    .X..
    XXX.
    ....
*/
                break;
            default:
                break;
		}
    }


